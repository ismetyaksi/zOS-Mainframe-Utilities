//IBMUSER1 JOB (ACT1,1),'IBMUSER',MSGCLASS=X,
//            NOTIFY=&SYSUID
//*
//* BATCH REXX RACF MIGRATION PROGRAM 1
//*
//* 1. ANALYZE ACID TYPES
//* 2. CREATE ADDGROUP AND ADDUSER RACF COMMANDS
//*
//STEP1    EXEC PGM=ICEGENER
//SYSIN    DD DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD UNIT=SYSALLDA,DSN=&&SYSEXEC(MYREXX),  ===
//           DISP=(MOD,PASS),SPACE=(CYL,(1,1,10)),
//           DCB=(SYS1.MACLIB,BLKSIZE=0)
//SYSUT1   DD *
 /* BATCH REXX                                                   */

 DELIM = ';'                               /* USER LINE DELIM    */

 /* PART 1 * PART 1 * PART 1 * PART 1 * PART 1 * PART 1 * PART 1 */

 N_TAB = 0

 'EXECIO 1 DISKR FILEIN1 (STEM LINEIN1.'   /* SKIP HEADER        */

 CALL PARSE_ACID_INFO                   /* PARSE PARAMETERS      */

  DO IX1 = 1 TO ACID_PARM.0             /* LIST PARAMETERS       */
    SAY IX1 ACID_PARM.IX1
  END

  SAY

 'EXECIO 1 DISKR FILEIN1 (STEM LINEIN1.'

 DO WHILE RC = 0                           /* ANALYZE ACID TYPES */
   CALL PARSE_ACID_INFO

   FOUND = 0

   DO IX2 = 1 TO N_TAB WHILE FOUND = 0
     IF ACID_PARM.3 = TAB_ACID_TYPE.IX2 THEN
       DO           /* INCREASE COUNT BY ONE FOR A KNOWN TYPE    */
         FOUND = 1
         TAB_ACID_COUNT.IX2 = TAB_ACID_COUNT.IX2 + 1
       END
   END /* DO IX2 = 1 N_TAB WHILE FOUND = 0 */

   IF FOUND = 0 THEN
     DO             /* ADD TYPE TO TABLE                         */
       N_TAB = N_TAB + 1
       TAB_ACID_TYPE.N_TAB  = ACID_PARM.3
       TAB_ACID_COUNT.N_TAB = 1
     END

   'EXECIO 1 DISKR FILEIN1 (STEM LINEIN1.'
 END /*  DO WHILE RC = 0  */

 TAB_ACID_TYPE.0  = N_TAB
 TAB_ACID_COUNT.0 = N_TAB

 DO IX2 = 1 TO TAB_ACID_TYPE.0     /* LIST TYPES AND COUNTS      */
   SAY IX2 TAB_ACID_TYPE.IX2   TAB_ACID_COUNT.IX2
 END /* DO IX2 = 1 TO TAB_ACID_TYPE.0 */

 'EXECIO 0 DISKR FILEIN1 (FINIS        '   /* CLOSE FILE         */

 /* PART 2 * PART 2 * PART 2 * PART 2 * PART 2 * PART 2 * PART 2 */

 EXCLUDED_GROUPS = 'CFZADMGP CFZSRVGP CFZUSRGP CPOCTRL CPOQUERY FEK'
 EXCLUDED_GROUPS = EXCLUDED_GROUPS 'IZUADMIN IZUADMPR IZUSCADG'
 EXCLUDED_GROUPS = EXCLUDED_GROUPS 'IZUSECAD IZUUNGRG IZUUNGRP'
 EXCLUDED_GROUPS = EXCLUDED_GROUPS 'IZUUSER IZUUSRPR OMVSGRP'

 EXCLUDED_USERS  = 'SYSPR99 SYSPRXX'

 /* USERS USED BEFORE THIS DATE WILL NOT BE CREATED              */

 /* LAST_USED_DAYS = DATE('BASE', '31/12/99', 'EUROPEAN')  */

 'EXECIO 1 DISKR FILEIN1 (STEM LINEIN1.'   /* SKIP HEADER        */
 'EXECIO 1 DISKR FILEIN1 (STEM LINEIN1.'

  CALL DEFINE_OMVSGRP /* DEFINE OMVSGRP IN ADVANCE               */

 DO WHILE RC = 0      /* PREPARE ADDGROUP AND ADDUSER COMMANDS   */
   LINEIN1.1 = TRANSLATE(LINEIN1.1)    /* CONVER TO UPPER CASE   */

   CALL PARSE_ACID_INFO

   IF ACID_PARM.18 = '' THEN
     IF ACID_PARM.10 = 'PDFOP12' THEN
       DFLTGRP = 'OOP12GRP'
     ELSE
       DFLTGRP = 'OMVSGRP'
   ELSE
     DFLTGRP = ACID_PARM.18

   SELECT
     WHEN POS(ACID_PARM.1, EXCLUDED_USERS) <> 0  THEN
       DO
         MSG1 = ' EXCLUDED USER' ACID_PARM.3 ACID_PARM.1
         MSG1 = MSG1 '(LAST USED:' ACID_PARM.5')'
         MSG1 = MSG1 'NOT CREATED'
         SAY MSG1
       END

     WHEN POS(ACID_PARM.3, ' DIVISION DEPT PROFILE GROUP ') <> 0 & ,
          POS(ACID_PARM.1, EXCLUDED_GROUPS) = 0                   THEN
       DO
         CALL DEFINE_GROUP
       END
     WHEN TRANSLATE(ACID_PARM.17) = 'XSUSPEND' THEN
       DO
         MSG1 = ' REVOKED (SUSPENDED) USER' ACID_PARM.3 ACID_PARM.1
         MSG1 = MSG1 '(LAST USED:' ACID_PARM.5')'
         MSG1 = MSG1 'NOT CREATED'
         SAY MSG1
       END
     WHEN LEFT(ACID_PARM.1, 2) = 'RS'  & ,
         ACID_PARM.3 = 'USER'           THEN
       DO
         CALL DEFINE_USROP12
       END
     WHEN LEFT(ACID_PARM.1, 3) = 'DVL' & ,
         ACID_PARM.3 = 'USER'           THEN
       DO
         CALL DEFINE_USRDVL
       END
     WHEN LEFT(ACID_PARM.1, 3) = 'SYS' & ,
         ACID_PARM.3 = 'CENTRAL'        THEN
       DO
         CALL DEFINE_SYSPROG
       END
     WHEN LEFT(ACID_PARM.1, 3) = 'SYS' & ,
         ACID_PARM.3 = 'MASTER'         THEN
       DO
         CALL DEFINE_SYSPROG
       END
     WHEN LEFT(ACID_PARM.1, 4) = 'ACT3' & ,
         ACID_PARM.3 = 'CENTRAL'        THEN
       DO
         CALL DEFINE_USRACT3
       END
     WHEN LEFT(ACID_PARM.1, 4) = 'OPR2' & ,
         ACID_PARM.3 = 'USER'           THEN
       DO
         CALL DEFINE_USROPR2
       END
     WHEN LEFT(ACID_PARM.1, 3) = 'OPS'  & ,
         ACID_PARM.3 = 'USER'           THEN
       DO
         CALL DEFINE_USROPS
       END
     WHEN LEFT(ACID_PARM.1, 3) = 'OPT'  & ,
         ACID_PARM.3 = 'ZONE'           THEN
       DO
         CALL DEFINE_USROPT
       END
     WHEN LEFT(ACID_PARM.1, 2) = 'RZ'   & ,
         ACID_PARM.3 = 'USER'           THEN
       DO
         CALL DEFINE_USRRZRZ
       END
     WHEN ACID_PARM.3 = 'USER' THEN
       DO
         CALL DEFINE_NO_TSO_USER
       END
     OTHERWISE
       DO
         MSG1 = ' 'ACID_PARM.3 ACID_PARM.1
         MSG1 = MSG1 '(LAST USED:' ACID_PARM.5')'
         MSG1 = MSG1 'NOT CREATED'
         SAY MSG1
       END
   END /* SELECT */

   'EXECIO 1 DISKR FILEIN1 (STEM LINEIN1.'
 END /*  DO WHILE RC = 0  */

 RETURN
 RETURN

 PARSE_ACID_INFO:
   TMP1 = LINEIN1.1

   DO IX1 = 1 BY 1 WHILE TMP1 <> ''
       PARSE VAR TMP1 ACID_PARM.IX1 (DELIM) TMP1
   END

   ACID_PARM.0 = IX1 - 1

 RETURN
 RETURN

 /* DO IX1 = 1 TO ACID_PARM.0   */
 /*   SAY IX1 ACID_PARM.IX1     */
 /* END                         */

 /* SAY                         */

 DEFINE_OMVSGRP:
   GROUP_DATA = ACID_PARM.3 '-' ACID_PARM.2

   O_LINES.1 = ' /* GROUP - OMVS GROUP */'

   O_LINES.2 = ' DELGROUP (OMVSGRP)'
   O_LINES.3 = " ADDGROUP (OMVSGRP) DATA('GROUP- OMVS GROUP')"
   O_LINES.3 = O_LINES.3 'SUPGROUP(SYS1   ) OWNER(SYS1   )'

 /* IRR52183I USE OF AUTOMATIC GID ASSIGNMENT REQUIRES */
 /*   SHARED.IDS TO BE IMPLEMENTED.                    */
   O_LINES.3 = O_LINES.3 'OMVS(AUTOGID)'

   O_LINES.0 = 3

   'EXECIO 'O_LINES.0' DISKW GROUP   (STEM O_LINES.'

 RETURN

 DEFINE_GROUP:
   GROUP_DATA = ACID_PARM.3 '-' ACID_PARM.2

   O_LINES.1 = ' /*' GROUP_DATA '*/'

   O_LINES.2 = ' DELGROUP ('ACID_PARM.1')'
   O_LINES.3 = " ADDGROUP ("ACID_PARM.1") DATA('"GROUP_DATA"')"
   O_LINES.3 = O_LINES.3 'SUPGROUP(OMVSGRP) OWNER(OMVSGRP)'

 /* IRR52183I USE OF AUTOMATIC GID ASSIGNMENT REQUIRES */
 /*   SHARED.IDS TO BE IMPLEMENTED.                    */
 /* O_LINES.3 = O_LINES.3 'OMVS(AUTOGID)'              */

   O_LINES.0 = 3

   'EXECIO 'O_LINES.0' DISKW GROUP   (STEM O_LINES.'

 RETURN

 DEFINE_SYSPROG:
   O_LINES.1 = ' /*' ACID_PARM.1 'LAST USED (DDMMYY):' ACID_PARM.5 '*/'

   HLQ1 = "'"ACID_PARM.1".**'"

   O_LINES.2 = ' DELDSD ('HLQ1')'
   O_LINES.3 = ' DELUSER ('ACID_PARM.1')'
   O_LINES.4 = " ADDUSER ("ACID_PARM.1") NAME('"ACID_PARM.2"')"
   O_LINES.4 = O_LINES.4 'PASSWORD('GENPW(ACID_PARM.1)')'/* INSERT PW*/
   O_LINES.4 = O_LINES.4 'DFLTGRP('DFLTGRP') OWNER('DFLTGRP')'
 /*O_LINES.4 = O_LINES.4 'AUDITOR OPERATIONS SPECIAL' */
   O_LINES.4 = O_LINES.4 'TSO(ACCTNUM(ACT1) COMMAND(PDFTSOSP)' /* TSO*/
   O_LINES.4 = O_LINES.4 'SIZE(2096128) MAXSIZE(9999999)'
   O_LINES.4 = O_LINES.4 '+'
   O_LINES.5 = '   '
   O_LINES.5 = O_LINES.5 'JOBCLASS(A) MSGCLASS(X) HOLDCLASS(X) SYS(X)'
   O_LINES.5 = O_LINES.5 'UNIT(SYSALLDA) USERDATA(0000)'
   O_LINES.5 = O_LINES.5 'PROC(LOGONSP))' /* CLOSE TSO PARANTHESIS */
   O_LINES.6 = ' ADDSD ('HLQ1') OWNER('ACID_PARM.1')'
   O_LINES.6 = O_LINES.6 'UACC(READ) NOSET'
   O_LINES.0 = 6

   'EXECIO 'O_LINES.0' DISKW USRSYSP (STEM O_LINES.'

   CALL CONNECT_USER

 RETURN

 DEFINE_USRDVL:

   O_LINES.1 = ' /*' ACID_PARM.1 'LAST USED (DDMMYY):' ACID_PARM.5 '*/'

   HLQ1 = "'"ACID_PARM.1".**'"

   O_LINES.2 = ' DELDSD ('HLQ1')'
   O_LINES.3 = ' DELUSER ('ACID_PARM.1')'
   O_LINES.4 = " ADDUSER ("ACID_PARM.1") NAME('"ACID_PARM.2"')"
   O_LINES.4 = O_LINES.4 'PASSWORD('GENPW(ACID_PARM.1)')'/* INSERT PW*/
   O_LINES.4 = O_LINES.4 'DFLTGRP('DFLTGRP') OWNER('DFLTGRP')'
   O_LINES.4 = O_LINES.4 'TSO(ACCTNUM('ACID_PARM.11')'         /* TSO*/
   O_LINES.4 = O_LINES.4 'COMMAND('ACID_PARM.10')'
   O_LINES.4 = O_LINES.4 'SIZE(8192) MAXSIZE(9120)'
   O_LINES.4 = O_LINES.4 'JOBCLASS(A) MSGCLASS(X) HOLDCLASS(X) SYS(X)'
   O_LINES.4 = O_LINES.4 'UNIT(SYSALLDA) USERDATA(0000)'
   O_LINES.4 = O_LINES.4 'PROC(LOGONSG))' /* CLOSE TSO PARANTHESIS */
   O_LINES.5 = ' ADDSD ('HLQ1') OWNER('ACID_PARM.1')'
   O_LINES.5 = O_LINES.5 'UACC(READ) NOSET'
   O_LINES.0 = 5

   'EXECIO 'O_LINES.0' DISKW USRDVL  (STEM O_LINES.'

   CALL CONNECT_USER

 RETURN

 DEFINE_USRRZRZ:

 /*  IF ACID_PARM.10 = 'PDFOP12' THEN            */
 /*    DEFAULT_GROUP = 'OOP12GRP'                */
 /*  ELSE X* LOGON CMD 'PDFTSOSG' *X             */
 /*    DEFAULT_GROUP = 'OMVSGRP'                 */

   O_LINES.1 = ' /*' ACID_PARM.1 'LAST USED (DDMMYY):' ACID_PARM.5 '*/'

   HLQ1 = "'"ACID_PARM.1".**'"

   O_LINES.2 = ' DELDSD ('HLQ1')'
   O_LINES.3 = ' DELUSER ('ACID_PARM.1')'
   O_LINES.4 = " ADDUSER ("ACID_PARM.1") NAME('"ACID_PARM.2"')"
   O_LINES.4 = O_LINES.4 'PASSWORD('GENPW(ACID_PARM.1)')'/* INSERT PW*/
   O_LINES.4 = O_LINES.4 'DFLTGRP('DFLTGRP')'
   O_LINES.4 = O_LINES.4 'OWNER('DFLTGRP')'
   O_LINES.4 = O_LINES.4 'TSO(ACCTNUM('ACID_PARM.11')'         /* TSO*/
   O_LINES.4 = O_LINES.4 'COMMAND('ACID_PARM.10')'
   O_LINES.4 = O_LINES.4 'SIZE(8192) MAXSIZE(9120)'
   O_LINES.4 = O_LINES.4 'JOBCLASS(A) MSGCLASS(X) HOLDCLASS(X) SYS(X)'
   O_LINES.4 = O_LINES.4 'UNIT(SYSALLDA) USERDATA(0000)'
   O_LINES.4 = O_LINES.4 'PROC(LOGONSG))' /* CLOSE TSO PARANTHESIS */
   O_LINES.5 = ' ADDSD ('HLQ1') OWNER('ACID_PARM.1')'
   O_LINES.5 = O_LINES.5 'UACC(READ) NOSET'
   O_LINES.0 = 5

   'EXECIO 'O_LINES.0' DISKW USRRZRZ (STEM O_LINES.'

   CALL CONNECT_USER

 RETURN

 DEFINE_USROP12:

   O_LINES.1 = ' /*' ACID_PARM.1 'LAST USED (DDMMYY):' ACID_PARM.5 '*/'

   HLQ1 = "'"ACID_PARM.1".**'"

   O_LINES.2 = ' DELDSD ('HLQ1')'
   O_LINES.3 = ' DELUSER ('ACID_PARM.1')'
   O_LINES.4 = " ADDUSER ("ACID_PARM.1") NAME('"ACID_PARM.2"')"
   O_LINES.4 = O_LINES.4 'PASSWORD('GENPW(ACID_PARM.1)')'/* INSERT PW*/
   O_LINES.4 = O_LINES.4 'DFLTGRP('DFLTGRP') OWNER('DFLTGRP')'
   O_LINES.4 = O_LINES.4 'TSO(ACCTNUM('ACID_PARM.11')'         /* TSO*/
   O_LINES.4 = O_LINES.4 'COMMAND('ACID_PARM.10')'
   O_LINES.4 = O_LINES.4 'SIZE(8192) MAXSIZE(10240)'
   O_LINES.4 = O_LINES.4 'JOBCLASS(A) MSGCLASS(X) HOLDCLASS(X) SYS(X)'
   O_LINES.4 = O_LINES.4 'UNIT(SYSALLDA) USERDATA(0000)'
   O_LINES.4 = O_LINES.4 'PROC(LOGONSG))' /* CLOSE TSO PARANTHESIS */
   O_LINES.5 = ' ADDSD ('HLQ1') OWNER('ACID_PARM.1')'
   O_LINES.5 = O_LINES.5 'UACC(READ) NOSET'
   O_LINES.0 = 5

   'EXECIO 'O_LINES.0' DISKW USROP12 (STEM O_LINES.'

   CALL CONNECT_USER

 RETURN

 DEFINE_USRACT3:
   O_LINES.1 = ' /*' ACID_PARM.1 'LAST USED (DDMMYY):' ACID_PARM.5 '*/'

   HLQ1 = "'"ACID_PARM.1".**'"

   O_LINES.2 = ' DELDSD ('HLQ1')'
   O_LINES.3 = ' DELUSER ('ACID_PARM.1')'
   O_LINES.4 = " ADDUSER ("ACID_PARM.1") NAME('"ACID_PARM.2"')"
   O_LINES.4 = O_LINES.4 'PASSWORD('GENPW(ACID_PARM.1)')'/* INSERT PW*/
   O_LINES.4 = O_LINES.4 'DFLTGRP('DFLTGRP') OWNER('DFLTGRP')'
   O_LINES.4 = O_LINES.4 'TSO(ACCTNUM(HLP1) COMMAND(PDFTSOOG)' /* TSO*/
   O_LINES.4 = O_LINES.4 'SIZE(4096) MAXSIZE(4096)'
   O_LINES.4 = O_LINES.4 'JOBCLASS(A) MSGCLASS(X) HOLDCLASS(X) SYS(X)'
   O_LINES.4 = O_LINES.4 'UNIT(SYSALLDA) USERDATA(0000)'
   O_LINES.4 = O_LINES.4 'PROC(LOGONSG))' /* CLOSE TSO PARANTHESIS */
   O_LINES.5 = ' ADDSD ('HLQ1') OWNER('ACID_PARM.1')'
   O_LINES.5 = O_LINES.5 'UACC(READ) NOSET'
   O_LINES.0 = 5

   'EXECIO 'O_LINES.0' DISKW USROPER (STEM O_LINES.'

   CALL CONNECT_USER

 RETURN

 DEFINE_USROPR2:
   O_LINES.1 = ' /*' ACID_PARM.1 'LAST USED (DDMMYY):' ACID_PARM.5 '*/'

   HLQ1 = "'"ACID_PARM.1".**'"

   O_LINES.2 = ' DELDSD ('HLQ1')'
   O_LINES.3 = ' DELUSER ('ACID_PARM.1')'
   O_LINES.4 = " ADDUSER ("ACID_PARM.1") NAME('"ACID_PARM.2"')"
   O_LINES.4 = O_LINES.4 'PASSWORD('GENPW(ACID_PARM.1)')'/* INSERT PW*/
   O_LINES.4 = O_LINES.4 'DFLTGRP('DFLTGRP') OWNER('DFLTGRP')'
   O_LINES.4 = O_LINES.4 'TSO(ACCTNUM(ACT1) COMMAND(PDFTSOSK)' /* TSO*/
   O_LINES.4 = O_LINES.4 'SIZE(4096) MAXSIZE(4096)'
   O_LINES.4 = O_LINES.4 'JOBCLASS(A) MSGCLASS(X) HOLDCLASS(X) SYS(X)'
   O_LINES.4 = O_LINES.4 'UNIT(SYSALLDA) USERDATA(0000)'
   O_LINES.4 = O_LINES.4 'PROC(LOGONSG))' /* CLOSE TSO PARANTHESIS */
   O_LINES.5 = ' ADDSD ('HLQ1') OWNER('ACID_PARM.1')'
   O_LINES.5 = O_LINES.5 'UACC(READ) NOSET'
   O_LINES.0 = 5

   'EXECIO 'O_LINES.0' DISKW USROPER (STEM O_LINES.'

   CALL CONNECT_USER

 RETURN

 DEFINE_USROPS:
   O_LINES.1 = ' /*' ACID_PARM.1 'LAST USED (DDMMYY):' ACID_PARM.5 '*/'

   HLQ1 = "'"ACID_PARM.1".**'"

   O_LINES.2 = ' DELDSD ('HLQ1')'
   O_LINES.3 = ' DELUSER ('ACID_PARM.1')'
   O_LINES.4 = " ADDUSER ("ACID_PARM.1") NAME('"ACID_PARM.2"')"
   O_LINES.4 = O_LINES.4 'PASSWORD('GENPW(ACID_PARM.1)')'/* INSERT PW*/
   O_LINES.4 = O_LINES.4 'DFLTGRP('DFLTGRP') OWNER('DFLTGRP')'
   O_LINES.4 = O_LINES.4 'TSO(ACCTNUM(ACT2) COMMAND(PDFTSOOG)' /* TSO*/
   O_LINES.4 = O_LINES.4 'SIZE(4096) MAXSIZE(4096)'
   O_LINES.4 = O_LINES.4 'JOBCLASS(A) MSGCLASS(X) HOLDCLASS(X) SYS(X)'
   O_LINES.4 = O_LINES.4 'UNIT(SYSALLDA) USERDATA(0000)'
   O_LINES.4 = O_LINES.4 'PROC(LOGONSG))' /* CLOSE TSO PARANTHESIS */
   O_LINES.5 = ' ADDSD ('HLQ1') OWNER('ACID_PARM.1')'
   O_LINES.5 = O_LINES.5 'UACC(READ) NOSET'
   O_LINES.0 = 5

   'EXECIO 'O_LINES.0' DISKW USROPER (STEM O_LINES.'

 RETURN

 DEFINE_USROPT:
   O_LINES.1 = ' /*' ACID_PARM.1 'LAST USED (DDMMYY):' ACID_PARM.5 '*/'

   HLQ1 = "'"ACID_PARM.1".**'"

   O_LINES.2 = ' DELDSD ('HLQ1')'
   O_LINES.3 = ' DELUSER ('ACID_PARM.1')'
   O_LINES.4 = " ADDUSER ("ACID_PARM.1") NAME('"ACID_PARM.2"')"
   O_LINES.4 = O_LINES.4 'PASSWORD('GENPW(ACID_PARM.1)')'/* INSERT PW*/
   O_LINES.4 = O_LINES.4 'DFLTGRP('DFLTGRP') OWNER('DFLTGRP')'
   O_LINES.4 = O_LINES.4 'TSO(ACCTNUM(ACT3) COMMAND(PDFTSOOG)' /* TSO*/
   O_LINES.4 = O_LINES.4 'SIZE(4096) MAXSIZE(4096)'
   O_LINES.4 = O_LINES.4 'JOBCLASS(A) MSGCLASS(X) HOLDCLASS(X) SYS(X)'
   O_LINES.4 = O_LINES.4 'UNIT(SYSALLDA) USERDATA(0000)'
   O_LINES.4 = O_LINES.4 'PROC(LOGONSG))' /* CLOSE TSO PARANTHESIS */
   O_LINES.5 = ' ADDSD ('HLQ1') OWNER('ACID_PARM.1')'
   O_LINES.5 = O_LINES.5 'UACC(READ) NOSET'
   O_LINES.0 = 5

   'EXECIO 'O_LINES.0' DISKW USROPER (STEM O_LINES.'

   CALL CONNECT_USER

 RETURN

 DEFINE_NO_TSO_USER:
   O_LINES.1 = ' /*' ACID_PARM.1 'LAST USED (DDMMYY):' ACID_PARM.5 '*/'

   HLQ1 = "'"ACID_PARM.1".**'"

   O_LINES.2 = ' DELUSER ('ACID_PARM.1')'
   O_LINES.3 = " ADDUSER ("ACID_PARM.1") NAME('"ACID_PARM.2"')"
   O_LINES.3 = O_LINES.3 'DFLTGRP('DFLTGRP') OWNER('DFLTGRP')'
   O_LINES.3 = O_LINES.3 'PASSWORD('GENPW(ACID_PARM.1)')'/* INSERT PW*/
   O_LINES.3 = O_LINES.3 '/* OR NOPASSWORD IF STARTED TASK USER */'
   O_LINES.0 = 3

   'EXECIO 'O_LINES.0' DISKW USRNTSO (STEM O_LINES.'

   CALL CONNECT_USER

 RETURN

 CONNECT_USER:            /* CONNECT USER TO GROUPS             */

   IF ACID_PARM.19 <> '' THEN
     DO
       GROUP_LIST = ACID_PARM.19 /* MAKE GROUPS A STEM VARIABLE     */
       CALL PARSE_GROUPS
     END

   IF ACID_PARM.20 <> '' THEN
     DO
       GROUP_LIST = ACID_PARM.20 /* MAKE PROFILES A STEM VARIABLE   */
       CALL PARSE_GROUPS
     END

   IF ACID_PARM.21 <> '' THEN
     DO
       GROUP_LIST = ACID_PARM.21 /* MAKE DEPARTMENTS A STEM VARIABLE*/
       CALL PARSE_GROUPS
     END

   IF ACID_PARM.22 <> '' THEN
     DO
       GROUP_LIST = ACID_PARM.22 /* MAKE DIVISIONS A STEM VARIABLE  */
       CALL PARSE_GROUPS
     END

 RETURN

 PARSE_GROUPS:

   DO IX3 = 1 BY 1 WHILE GROUP_LIST <> ''
       PARSE VAR GROUP_LIST STEM_GROUP.IX3 GROUP_LIST
   END

   STEM_GROUP.0 = IX3 - 1

   DO IX3 = 1 TO STEM_GROUP.0
     IF STEM_GROUP.IX3 = DFLTGRP THEN
       DO
         TMP1 = ' 'ACID_PARM.1 'DEFAULT GROUP'
         TMP1 = TMP1 STEM_GROUP.IX3 'WILL NOT BE CONNECTED'
         SAY TMP1
       END
     ELSE
       DO
         O_LINES.1 = ' CONNECT ('ACID_PARM.1')'
         O_LINES.1 = O_LINES.1 'GROUP('STEM_GROUP.IX3')'
         O_LINES.1 = O_LINES.1 'OWNER('STEM_GROUP.IX3')'
         O_LINES.1 = O_LINES.1 'AUTHORITY(USE) UACC(READ)'

         O_LINES.0 = 1

         'EXECIO 'O_LINES.0' DISKW CONNECT1 (STEM O_LINES.'
       END
   END /* DO IX3 = 1 TO STEM_GROUP.0 */

 RETURN
 RETURN

 /* ******************************************************** */

 /* USER PARAMETERS                                          */

 /*  1 ACCESSORID                                            */
 /*  2 NAME                                                  */
 /*  3 TYPE                                                  */
 /*  4 CREATED                                               */
 /*  5 LAST USED                                             */
 /*  6 TSOPROC                                               */
 /*  7 HOME                                                  */
 /*  8 OMVSPGM                                               */
 /*  9 UID                                                   */
 /* 10 TSOCOMMAND                                            */
 /* 11 TSOLACCT                                              */
 /* 12 TSOLPROC                                              */
 /* 13 TSOLSIZE                                              */
 /* 14 TSOMSIZE                                              */
 /* 15 TSOUDATA                                              */
 /* 16 TSOUNIT                                               */

 /* 17 ATTRIBUTES                                            */
 /* 18 DFLTGRP                                               */
 /* 19 GROUPS                                                */
 /* 20 PROFILES                                              */
 /* 21 DEPT ACID                                             */
 /* 22 DIV ACID                                              */

 /* ACID TYPES AND COUNTS                                    */

 /* 1 MASTER      1 (SYSPROGS)                               */
 /* 2 CENTRAL    33 (SYSPROGS)                               */
 /* 3 LIMITED     3                                          */
 /* 4 DIVISION    4 (GROUPS)                                 */
 /* 5 DEPT       26 (GROUPS)                                 */
 /* 6 USER     1218                                          */
 /* 7 PROFILE    71 (GROUPS)                                 */
 /* 8 GROUP      31 (GROUPS)                                 */
 /* 9 ZONE       26 (OPERATORS)                              */

 RETURN
 RETURN

//*
//* EXECUTE REXX PROGRAM
//*
//STEP3    EXEC PGM=IRXJCL,PARM='MYREXX'            ===
//SYSEXEC  DD DISP=(OLD,PASS),DSN=&&SYSEXEC
//         DD DISP=SHR,DSN=HLSYS.RACF.EXEC            === GENPW
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD DUMMY
//FILEIN1  DD DISP=SHR,DSN=HLSYS.RACFMIG.CSV(ACID1)   ===
//*SRSYSP  DD SYSOUT=*
//USRSYSP  DD DISP=SHR,DSN=HLSYS.RACFMIG.TSOCMD(USRSYSP),
//           UNIT=SYSALLDA,VOL=SER=S23CAT
//USROPER  DD DISP=SHR,DSN=HLSYS.RACFMIG.TSOCMD(USROPER),
//           UNIT=SYSALLDA,VOL=SER=S23CAT
//USRNTSO  DD DISP=SHR,DSN=HLSYS.RACFMIG.TSOCMD(USRNTSO),
//           UNIT=SYSALLDA,VOL=SER=S23CAT
//USRDVL   DD DISP=SHR,DSN=HLSYS.RACFMIG.TSOCMD(USRDVL),
//           UNIT=SYSALLDA,VOL=SER=S23CAT
//USROP12  DD DISP=SHR,DSN=HLSYS.RACFMIG.TSOCMD(USROP12),
//           UNIT=SYSALLDA,VOL=SER=S23CAT
//USRRZRZ  DD DISP=SHR,DSN=HLSYS.RACFMIG.TSOCMD(USRRZRZ),
//           UNIT=SYSALLDA,VOL=SER=S23CAT
//*ROUP    DD SYSOUT=*
//GROUP    DD DISP=SHR,DSN=HLSYS.RACFMIG.TSOCMD(GROUP),
//           UNIT=SYSALLDA,VOL=SER=S23CAT
//CONNECT1 DD DISP=SHR,DSN=HLSYS.RACFMIG.TSOCMD(CONNECT1),
//           UNIT=SYSALLDA,VOL=SER=S23CAT
//OUTUSER  DD SYSOUT=*,DCB=(RECFM=VB,LRECL=255,BLKSIZE=0)
//
